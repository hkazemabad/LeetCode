class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        
        int m = nums1.size();
        int n = nums2.size();
        vector<int> merged;
        
        int j = 0;
        int i = 0;
        while (i < m && j < n)
        {
            if(nums1[i] < nums2[j])
                merged.push_back(nums1[i++]);
            else
                merged.push_back(nums2[j++]);
        }
        while (i < m)
            merged.push_back(nums1[i++]);
        while (j < n)
            merged.push_back(nums2[j++]);
            
        
        int size_merged = merged.size();
      
        if (size_merged % 2 == 0)
            return ( merged[size_merged / 2] + merged[(size_merged / 2 ) - 1] ) / 2.0 ;
        else
            return merged[size_merged / 2];
    }
};
